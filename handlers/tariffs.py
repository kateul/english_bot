from aiogram import Router, F, types
from db import get_tariffs_by_category
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
from keyboards.menu import get_main_menu  # –ò–º–ø–æ—Ä—Ç –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é


router = Router()

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏
tariff_categories_keyboard = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="üßí –£—Ä–æ–∫–∏ –¥–ª—è –¥–µ—Ç–µ–π")],
        [KeyboardButton(text="üë©‚Äçüíº –£—Ä–æ–∫–∏ –¥–ª—è –≤–∑—Ä–æ—Å–ª—ã—Ö")],
        [KeyboardButton(text="üéì –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ —ç–∫–∑–∞–º–µ–Ω–∞–º")],
        [KeyboardButton(text="‚Ü© –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é")]
    ],
    resize_keyboard=True
)

@router.message(F.text == "üí∞ –¢–∞—Ä–∏—Ñ—ã")
async def show_tarifs_categories(message: types.Message):
    await message.answer("–í—ã–±–µ—Ä–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é —Ç–∞—Ä–∏—Ñ–æ–≤:", reply_markup=tariff_categories_keyboard)

@router.message(F.text == "üßí –£—Ä–æ–∫–∏ –¥–ª—è –¥–µ—Ç–µ–π")
async def show_children_tariffs(message: types.Message):
    tariffs = await get_tariffs_by_category("–¥–µ—Ç–∏")
    await send_tariffs(message, tariffs)

@router.message(F.text == "üë©‚Äçüíº –£—Ä–æ–∫–∏ –¥–ª—è –≤–∑—Ä–æ—Å–ª—ã—Ö")
async def show_adult_tariffs(message: types.Message):
    tariffs = await get_tariffs_by_category("–≤–∑—Ä–æ—Å–ª—ã–µ")
    await send_tariffs(message, tariffs)

@router.message(F.text == "üéì –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ —ç–∫–∑–∞–º–µ–Ω–∞–º")
async def show_exam_tariffs(message: types.Message):
    tariffs = await get_tariffs_by_category("—ç–∫–∑–∞–º–µ–Ω—ã")
    await send_tariffs(message, tariffs)

# –û–±—â–∞—è —Ñ—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ç–∞—Ä–∏—Ñ–æ–≤
async def send_tariffs(message: types.Message, tariffs: list):
    if not tariffs:
        await message.answer("–¢–∞—Ä–∏—Ñ—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –¥–ª—è —ç—Ç–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏.")
        return

    for tariff in tariffs:
        text = (
            f"*{tariff['title']}* - {tariff['age_range']}, {tariff['duration_minutes']} –º–∏–Ω—É—Ç\n"
            f"_–£—Ä–æ–≤–µ–Ω—å —è–∑—ã–∫–∞_: {tariff['language_level']}\n"
            f"{tariff['description']}"
        )
        await message.answer(text, parse_mode="Markdown")

    await message.answer("–í—ã–±–µ—Ä–∏ –¥—Ä—É–≥—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é:", reply_markup=tariff_categories_keyboard)


@router.message(F.text == "‚Ü© –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é")
async def return_to_main_menu(message: types.Message):
    await message.answer("–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üòä", reply_markup=get_main_menu(user_id=message.from_user.id))
