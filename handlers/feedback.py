from aiogram import Router, F, types
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from config import ADMIN_IDS

router = Router()

class FeedbackState(StatesGroup):
    waiting_for_feedback = State()

@router.message(F.text == "‚úâÔ∏è –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å")
async def start_feedback(message: types.Message, state: FSMContext):  # ‚Üê –¥–æ–±–∞–≤–∏–ª–∏ state
    await message.answer(
        "–¢—É—Ç –≤—ã –º–æ–∂–µ—Ç–µ –æ—Å—Ç–∞–≤–∏—Ç—å —Å–≤–æ–π –æ—Ç–∑—ã–≤ –æ–± –æ–±—É—á–µ–Ω–∏–∏, –∞ —Ç–∞–∫–∂–µ –¥–∞—Ç—å —Å–≤–æ–π ‚ú®feedback‚ú® –æ–± —É—Ä–æ–∫–∞—Ö.\n"
        "–ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —á–∞—Ç, –∏ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å –µ–≥–æ –ø–æ–ª—É—á–∏—Ç ‚úâÔ∏è "
    )
    await state.set_state(FeedbackState.waiting_for_feedback)

@router.message(FeedbackState.waiting_for_feedback)
async def receive_feedback(message: types.Message, state: FSMContext):
    for admin_id in ADMIN_IDS:
        await message.bot.send_message(
            admin_id,
            f"üë§ *–ò–º—è —É—á–µ–Ω–∏–∫–∞:* {message.from_user.full_name}\n"
            f"üí¨ *–°–æ–æ–±—â–µ–Ω–∏–µ:*\n{message.text}",
            parse_mode="Markdown"
        )

    await message.answer("‚úÖ –°–ø–∞—Å–∏–±–æ! –í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—é.")
    await state.clear()
