from aiogram import Router, F, types
import asyncpg #asyncpg is a database interface library designed specifically for PostgreSQ
from config import DB_HOST, DB_PORT, DB_NAME, DB_USER, DB_PASSWORD

router = Router()

@router.message(F.text == "üìö –ú–æ–∏ –∑–∞–Ω—è—Ç–∏—è")
async def show_schedule(message: types.Message):
    pool = await asyncpg.create_pool(
        host=DB_HOST, port=DB_PORT, database=DB_NAME, user=DB_USER, password=DB_PASSWORD
    )
    async with pool.acquire() as conn:
        user = await conn.fetchrow("""
        SELECT first_name, last_name, day_of_week, lesson_time 
        FROM students WHERE telegram_id = $1
        """, message.from_user.id)

    await pool.close()

    if user is None:
        await message.answer("–¢—ã –µ—â—ë –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω. –ù–∞–∂–º–∏ üìù –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è.")
    else:
        await message.answer(
           f'üóì –ó–∞–Ω—è—Ç–∏—è —É —Ç–µ–±—è –ø—Ä–æ—Ö–æ–¥—è—Ç –≤ *{user["day_of_week"]}*\n' #*...* ‚Äî —Å–ø–æ—Å–æ–± –≤—ã–¥–µ–ª–∏—Ç—å –∂–∏—Ä–Ω—ã–π —Ç–µ–∫—Å—Ç
            f'üïí –í—Ä–µ–º—è: *{user["lesson_time"].strftime("%H:%M")}*\n'

            f'üë§ –ò–º—è: {user["first_name"]}',
            parse_mode='Markdown'

        )